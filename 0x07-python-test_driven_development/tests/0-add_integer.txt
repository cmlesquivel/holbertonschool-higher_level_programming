 test 0-add_integer
======================

Using ``0-add_integer``
------------------

Import file
>>> add_integer = __import__("0-add_integer").add_integer

Now use it:

    >>> add_integer(6,4)
    10

    >>> add_integer(6,-4)
    2

    >>> add_integer(6,-4.6)
    2

    >>> add_integer(6,)
    104

    >>> add_integer(4, "School")
    Traceback (most recent call last):
    	...
    TypeError: b must be an integer

    >>> add_integer(4, None)
    Traceback (most recent call last):
        ...
    TypeError: b must be an integer

    >>> add_integer(None, 5)
    Traceback (most recent call last):
        ...
    TypeError: a must be an integer

    >>> add_integer(None)
    Traceback (most recent call last):
        ...
    TypeError: a must be an integer

    >>> add_integer( , )
    Traceback (most recent call last):
    ...
    SyntaxError: invalid syntax

    >>> add_integer( ,4)
    Traceback (most recent call last):
    ...
    SyntaxError: invalid syntax

    >>> add_integer((4,), 5)
    Traceback (most recent call last):
        ...
    TypeError: a must be an integer

    >>> add_integer(6, (5,))
    Traceback (most recent call last):
        ...
    TypeError: b must be an integer

    >>> add_integer([5], 5)
    Traceback (most recent call last):
        ...
    TypeError: a must be an integer

    >>> add_integer(5, [57])
    Traceback (most recent call last):
        ...
    TypeError: b must be an integer

    >>> add_integer({}, 5)
    Traceback (most recent call last):
        ...
    TypeError: a must be an integer

    >>> add_integer(6, {67})
    Traceback (most recent call last):
        ...
    TypeError: b must be an integer
